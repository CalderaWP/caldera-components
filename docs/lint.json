[
  {
    "name": "prepareFieldConfig",
    "filePath": "src/components/fields/factories/prepareFieldConfig.js",
    "lines": [
      {
        "lineNumber": 4,
        "line": "/**\r"
      },
      {
        "lineNumber": 5,
        "line": " * Validates field configurations\r"
      },
      {
        "lineNumber": 6,
        "line": " *\r"
      },
      {
        "lineNumber": 7,
        "line": " * NOTE: This is called internally by factory. You probably do not want to call this.\r"
      },
      {
        "lineNumber": 8,
        "line": " *\r"
      },
      {
        "lineNumber": 9,
        "line": " * @param {Object}fieldArgs\r"
      },
      {
        "lineNumber": 10,
        "line": " * @returns {*}\r"
      },
      {
        "lineNumber": 11,
        "line": " */\r"
      },
      {
        "lineNumber": 12,
        "line": "export const prepareFieldConfig = (fieldArgs) => {\r"
      }
    ],
    "codeParams": [
      "fieldArgs"
    ],
    "docParams": [
      "{Object}fieldArgs"
    ]
  },
  {
    "name": "MagicFieldGroup#onChangeListType",
    "filePath": "src/components/fields/magic-select/MagicFieldGroup.js",
    "lines": [
      {
        "lineNumber": 70,
        "line": "\t/**\r"
      },
      {
        "lineNumber": 71,
        "line": "\t * Update list of tags to show\r"
      },
      {
        "lineNumber": 72,
        "line": "\t * @param {String}newType\r"
      },
      {
        "lineNumber": 73,
        "line": "\t */\r"
      },
      {
        "lineNumber": 74,
        "line": "\tonChangeListType(newType){\r"
      }
    ],
    "codeParams": [
      "newType"
    ],
    "docParams": [
      "{String}newType"
    ]
  },
  {
    "name": "messageObjectFactory",
    "filePath": "src/components/fields/messages/messageObjectFactory.js",
    "lines": [
      {
        "lineNumber": 2,
        "line": "/**\r"
      },
      {
        "lineNumber": 3,
        "line": " * Prepares messages object in fieldConfigs\r"
      },
      {
        "lineNumber": 4,
        "line": " *\r"
      },
      {
        "lineNumber": 5,
        "line": " * @param {Object} message\r"
      },
      {
        "lineNumber": 6,
        "line": " * @param {Boolean} error\r"
      },
      {
        "lineNumber": 7,
        "line": " * @return {{message: *, error: boolean}}\r"
      },
      {
        "lineNumber": 8,
        "line": " */\r"
      },
      {
        "lineNumber": 9,
        "line": "export const messageObjectFactory = ({message,error}) => {\r"
      }
    ],
    "codeParams": [
      "*"
    ],
    "docParams": [
      "message",
      "error"
    ]
  },
  {
    "name": "toBoolean",
    "filePath": "src/components/fields/util.js",
    "lines": [
      {
        "lineNumber": 63,
        "line": "/**\r"
      },
      {
        "lineNumber": 64,
        "line": " * Cast a boolean or boolean like to a true or false\r"
      },
      {
        "lineNumber": 65,
        "line": " *\r"
      },
      {
        "lineNumber": 66,
        "line": " * @param Mixed} value Value to cast\r"
      },
      {
        "lineNumber": 67,
        "line": " * @return {boolean}\r"
      },
      {
        "lineNumber": 68,
        "line": " */\r"
      },
      {
        "lineNumber": 69,
        "line": "export const toBoolean =(value) => {\r"
      }
    ],
    "codeParams": [
      "value"
    ],
    "docParams": [
      "Mixed}"
    ]
  }
]