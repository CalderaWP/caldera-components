[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/App.js",
    "content": "import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {FieldGroup} from \"./components/fields/FieldGroup\";\nimport {fieldSetFactory} from \"./components/fields/factories/fieldSetFactory\";\nimport {RenderGroup} from \"./components/RenderGroup\";\n\nlet textFieldValue = 'Roy,Mike';\nconst textFieldConfig = {\n\t'id': 'cf-something-tags',\n\t'label': 'Tags',\n\t'desc': 'Comma separated list of tags.',\n\t'type': 'text',\n\t'description': false,\n\tvalue: textFieldValue,\n\tonValueChange: function(newValue){\n\t\ttextFieldValue = newValue\n\t}\n};\n\nlet hiddenFieldValue = '42';\nconst hiddenFieldConfig = {\n\t'id': 'cf-something-sequence-id',\n\t'type': 'hidden',\n\t'label': 'Sequence ID',\n\t'description': false,\n\tvalue: hiddenFieldValue,\n\tonValueChange: function(newValue){\n\t\thiddenFieldValue = newValue\n\t}\n};\n\nlet selectFieldValue = 'html';\nconst selectFieldConfig = {\n\t'id': 'cf-something-select-id',\n\t'type': 'dropdown',\n\t'label': 'Content type',\n\t'description': 'Choose content type, default is HTML',\n\toptions: [\n\t\t{\n\t\t\tlabel: 'HTML',\n\t\t\tvalue: 'html'\n\t\t},\n\t\t{\n\t\t\tlabel: 'Plain Text',\n\t\t\tvalue: 'plain'\n\t\t}\n\t],\n\tvalue: selectFieldValue,\n\tonValueChange: function(newValue){\n\t\tselectFieldValue = newValue\n\t}\n};\n\nlet fieldSetFieldValue = ['1'];\nconst fieldSetField = {\n\tid: 'fieldset-3',\n\tlabel: 'How many?',\n\ttype: 'fieldset',\n\toptions: [\n\t\t{\n\t\t\tvalue: '1',\n\t\t\tlabel: 'One'\n\t\t},\n\t\t{\n\t\t\tvalue: '2',\n\t\t\tlabel: 'Two'\n\t\t}\n\n\t],\n\tvalue:[],\n\tonValueChange:(newValue) => {\n\t\tfieldSetFieldValue=newValue;\n\t}\n};\n\nconst configFields = [\n\ttextFieldConfig,\n\thiddenFieldConfig,\n\tselectFieldConfig,\n\tfieldSetField\n];\nconst configFieldEls = fieldSetFactory(configFields);\n\n\n\nlet values = {\n\tone: '',\n\ttwo: '',\n\tthree: ''\n};\n\nclass App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t<h1 className=\"App-title\">Welcome to React</h1>\n\t\t\t\t</header>\n\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Created With RenderGroup Component</h2>\n\t\t\t\t\t<RenderGroup\n\t\t\t\t\t\tconfigFields={configFields}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Created With Factory</h2>\n\t\t\t\t\t{Array.from(configFieldEls).map((field,i) => {\n\t\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t\tReact.Fragment, {\n\t\t\t\t\t\t\t\tkey: i,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Inputs</h2>\n\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\tid={'control-22'}\n\t\t\t\t\t\tlabel={'Required Text input'}\n\t\t\t\t\t\ttype={'input'}\n\t\t\t\t\t\tisRequired={true}\n\t\t\t\t\t\tvalue={values.one}\n\t\t\t\t\t\tonValueChange={(newValue) => {\n\t\t\t\t\t\t\tvalues.one=newValue;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\tid={'control-23'}\n\t\t\t\t\t\tlabel={'Non Required Text input'}\n\t\t\t\t\t\ttype={'input'}\n\t\t\t\t\t\tisRequired={true}\n\t\t\t\t\t\tvalue={values.two}\n\t\t\t\t\t\tonValueChange={(newValue) => {\n\t\t\t\t\t\t\tvalues.two=newValue;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\tid={'control-23'}\n\t\t\t\t\t\tlabel={'With Help Text'}\n\t\t\t\t\t\ttype={'input'}\n\t\t\t\t\t\tisRequired={true}\n\t\t\t\t\t\thelp={'Adding help text sets aria-describedy'}\n\t\t\t\t\t\tvalue={values.thre}\n\t\t\t\t\t\tonValueChange={(newValue) => {\n\t\t\t\t\t\t\tvalues.three=newValue;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\tid={'control-24'}\n\t\t\t\t\t\tlabel={'Non Required Numeric input'}\n\t\t\t\t\t\ttype={'input'}\n\t\t\t\t\t\tinnertype={'number'}\n\t\t\t\t\t\tisRequired={true}\n\t\t\t\t\t\tvalue={values.two}\n\t\t\t\t\t\tonValueChange={(newValue) => {\n\t\t\t\t\t\t\tvalues.two=newValue;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\tid={'control-25'}\n\t\t\t\t\t\tlabel={'Non Required input disabled with error'}\n\t\t\t\t\t\ttype={'input'}\n\t\t\t\t\t\tinnertype={'text'}\n\t\t\t\t\t\tisRequired={true}\n\t\t\t\t\t\tvalue={values.two}\n\t\t\t\t\t\tonValueChange={(newValue) => {\n\t\t\t\t\t\t\tvalues.two=newValue;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tmessage={{\n\t\t\t\t\t\t\tmessage:'Failures happened',\n\t\t\t\t\t\t\terror: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\tid={'control-25'}\n\t\t\t\t\t\tlabel={'Non Required input with non-error message'}\n\t\t\t\t\t\ttype={'input'}\n\t\t\t\t\t\tinnertype={'text'}\n\t\t\t\t\t\tisRequired={true}\n\t\t\t\t\t\tvalue={values.two}\n\t\t\t\t\t\tonValueChange={(newValue) => {\n\t\t\t\t\t\t\tvalues.two=newValue;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tmessage={{\n\t\t\t\t\t\t\tmessage:'Failures did not happened',\n\t\t\t\t\t\t\terror: false\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Selects</h2>\n\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\ttype={'select'}\n\t\t\t\t\t\tlabel={'Basic select field'}\n\t\t\t\t\t\tvalue={selectFieldValue}\n\t\t\t\t\t\tid={'r'}\n\t\t\t\t\t\tonValueChange={(newValue) => {\n\t\t\t\t\t\t\tselectFieldValue = newValue;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 1,\n\t\t\t\t\t\t\t\tlabel: 'One'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 2,\n\t\t\t\t\t\t\t\tlabel: 'Two'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2>fieldsets</h2>\n\t\t\t\t\t<FieldGroup\n\t\t\t\t\t\ttype={'fieldset'}\n\t\t\t\t\t\tlabel={'Checkbox group'}\n\t\t\t\t\t\tvalue={fieldSetFieldValue}\n\t\t\t\t\t\tid={'Checkbox1'}\n\t\t\t\t\t\tonValueChange={(newValue) => {\n\t\t\t\t\t\t\tfieldSetFieldValue = newValue;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: '1',\n\t\t\t\t\t\t\t\tlabel: 'One'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t\t\t\tlabel: 'Two'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/App.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "textFieldValue",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~textFieldValue",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "textFieldConfig",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~textFieldConfig",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"label\": string, \"desc\": string, \"type\": string, \"description\": *, \"value\": *, \"onValueChange\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "hiddenFieldValue",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~hiddenFieldValue",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "hiddenFieldConfig",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~hiddenFieldConfig",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"type\": string, \"label\": string, \"description\": *, \"value\": *, \"onValueChange\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "selectFieldValue",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~selectFieldValue",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "selectFieldConfig",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~selectFieldConfig",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"type\": string, \"label\": string, \"description\": string, \"options\": *, \"value\": *, \"onValueChange\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "fieldSetFieldValue",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~fieldSetFieldValue",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "fieldSetField",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~fieldSetField",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": string, \"label\": string, \"type\": string, \"options\": *, \"value\": *, \"onValueChange\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "configFields",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~configFields",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "configFieldEls",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~configFieldEls",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "values",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~values",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "{\"one\": *, \"two\": *, \"three\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "class",
    "name": "App",
    "memberof": "src/App.js",
    "static": true,
    "longname": "src/App.js~App",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/App.js",
    "importStyle": "App",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "render",
    "memberof": "src/App.js~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/App.js~App#render",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/components/RenderGroup.js",
    "content": "import React from 'react';\nimport propTypes from 'prop-types';\nimport {fieldSetFactory} from './fields/factories/fieldSetFactory';\n\n/**\n * Component for rendering an array of field configs\n */\nexport class RenderGroup extends React.Component {\n\n\n\t/**\n\t * Constructor for RenderGroup component\n\t * @param {Object} props\n\t */\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.createComponents = this.createComponents.bind(this);\n\n\n\t}\n\n\t/**\n\t * Create components\n\t *\n\t * @return {Array}\n\t */\n\tcreateComponents(){\n\t\treturn fieldSetFactory(this.props.configFields);\n\t}\n\n\t/**\n\t * Renderer for RenderGroup component\n\t *\n\t * @return {*}\n\t */\n\trender(){\n\t\treturn(\n\t\t\t<div\n\t\t\t\tclassName={this.props.className ? this.props.className : RenderGroup.classNames.renderGroupWrapper }\n\t\t\t>\n\t\t\t\t{this.createComponents().map((configField,i) => {\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t'div', {\n\t\t\t\t\t\t\tkey: i,\n\t\t\t\t\t\t\tclassName: RenderGroup.classNames.fieldGroup\n\t\t\t\t\t\t},\n\t\t\t\t\t\tconfigField\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/**\n * Prop definitions for RenderGroup component\n * @type {{configFields: *, className: shim}}\n */\nRenderGroup.propTypes = {\n\tconfigFields: propTypes.array.isRequired,\n\tclassName: propTypes.string\n};\n\n/**\n * Classnames for elements (wrappers, field groups and form fields)\n *\n * @type {{renderGroupWrapper: string, fieldWrapper: string}}\n */\nRenderGroup.classNames = {\n\trenderGroupWrapper: 'caldera-config-field-setup',\n\tfieldGroup: 'caldera-config-group',\n\tfieldWrapper: 'caldera-config-field',\n\tinput: 'field-config',\n\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/RenderGroup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "RenderGroup",
    "memberof": "src/components/RenderGroup.js",
    "static": true,
    "longname": "src/components/RenderGroup.js~RenderGroup",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/RenderGroup.js",
    "importStyle": "{RenderGroup}",
    "description": "Component for rendering an array of field configs",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/RenderGroup.js~RenderGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/RenderGroup.js~RenderGroup#constructor",
    "access": "public",
    "description": "Constructor for RenderGroup component",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "createComponents",
    "memberof": "src/components/RenderGroup.js~RenderGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/RenderGroup.js~RenderGroup#createComponents",
    "access": "public",
    "description": "Create components",
    "lineNumber": 27,
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/RenderGroup.js~RenderGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/RenderGroup.js~RenderGroup#render",
    "access": "public",
    "description": "Renderer for RenderGroup component",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/components/fields/FieldGroup.js",
    "content": "import React from 'react';\nimport classNames from 'classnames';\nimport {ariaDescribedbyAttr} from './util';\nimport {\n\tfieldGroupPropTypes,\n} from './propTypes';\n\nimport {FieldInner} from './FieldInner';\nimport {RenderGroup} from '../RenderGroup';\nimport {Message} from './messages/Message';\nimport {messageObjectFactory} from './messages/messageObjectFactory';\nimport {fieldsetCheckboxHandler} from './field-group-change-handlers/fieldsetCheckboxHandler';\n\n/**\n * Represents one configField -- wrapper, label and input.\n *\n * @param props\n * @return {*}\n * @constructor\n */\nexport const FieldGroup = (props) => {\n\n\t/**\n\t * Creates the id attribute\n\t * @return {String}\n\t */\n\tfunction idAttrForHelpElement() {\n\t\treturn ariaDescribedbyAttr(props.id, props.help);\n\t}\n\n\n\t/**\n\t * Based on type, render the field.\n\t *\n\t * @return {*}\n\t */\n\tfunction fieldInner(fieldProps) {\n\t\tconst message = 'object' === typeof  fieldProps.message\n\t\t\t? messageObjectFactory(fieldProps.message)\n\t\t\t: messageObjectFactory({message: null, error: false});\n\n\t\tfunction getFieldClassName(conditionalClassNames) {\n\t\t\treturn classNames(\n\t\t\t\t{\n\t\t\t\t\trequired: fieldProps.isRequired,\n\t\t\t\t\t...conditionalClassNames\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Is this option the checked value?\n\t\t * @param {object}option\n\t\t * @param {String|number|Array} currentValue\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction isCheckedOption(option, currentValue) {\n\t\t\tif (Array.isArray(currentValue)) {\n\t\t\t\treturn currentValue.includes(option.value);\n\t\t\t}\n\t\t\treturn option.value === currentValue;\n\t\t}\n\n\t\t//Fieldsets are rendered recursively.\n\t\tif ('fieldset' === fieldProps.type) {\n\t\t\treturn (\n\t\t\t\t<fieldset\n\t\t\t\t\tid={props.id}\n\t\t\t\t>\n\t\t\t\t\t<legend>\n\t\t\t\t\t\t{props.label}\n\t\t\t\t\t</legend>\n\t\t\t\t\t{props.options.map(option => {\n\n\n\t\t\t\t\t\t//Call this same function, as a regular checkbox\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<React.Fragment\n\t\t\t\t\t\t\t\tkey={`${props.id}-${option.value}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{fieldInner({\n\t\t\t\t\t\t\t\t\ttype: 'input',\n\t\t\t\t\t\t\t\t\tinputType: 'checkbox',\n\t\t\t\t\t\t\t\t\tid: `${props.id}-${option.value}`,\n\t\t\t\t\t\t\t\t\tvalue: isCheckedOption(option, props.value),\n\t\t\t\t\t\t\t\t\tfieldClassName: getFieldClassName({\n\t\t\t\t\t\t\t\t\t\t'fieldset-checkbox': true,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tlabel: option.label,\n\t\t\t\t\t\t\t\t\tdisabled: props.disabled,\n\t\t\t\t\t\t\t\t\tonValueChange: () => fieldsetCheckboxHandler(option, props.values, props.onValueChange)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</fieldset>\n\t\t\t);\n\t\t} else if ('hidden' === fieldProps.inputType) {\n\t\t\treturn (\n\t\t\t\tFieldInner(\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: props.type,\n\t\t\t\t\t\tid: props.id,\n\t\t\t\t\t\tfieldClassName: getFieldClassName(),\n\t\t\t\t\t\tvalue: fieldProps.value,\n\t\t\t\t\t\tonValueChange: fieldProps.onValueChange,\n\t\t\t\t\t\tinputType: fieldProps.inputType,\n\t\t\t\t\t\tdisabled: props.disabled,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName={RenderGroup.classNames.fieldWrapper}\n\t\t\t\t>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor={fieldProps.id}\n\t\t\t\t\t>\n\t\t\t\t\t\t{fieldProps.label}\n\t\t\t\t\t</label>\n\t\t\t\t\t<Message\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t/>\n\t\t\t\t\t{FieldInner(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: fieldProps.type,\n\t\t\t\t\t\t\tid: fieldProps.id,\n\t\t\t\t\t\t\tfieldClassName: getFieldClassName({\n\t\t\t\t\t\t\t\t'block-input': fieldProps.isBlockInput\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\thelp: fieldProps.help,\n\t\t\t\t\t\t\tvalue: fieldProps.value,\n\t\t\t\t\t\t\tonValueChange: fieldProps.onValueChange,\n\t\t\t\t\t\t\tinputType: fieldProps.inputType,\n\t\t\t\t\t\t\toptions: fieldProps.options,\n\t\t\t\t\t\t\tdisabled: props.disabled,\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t{fieldProps.help &&\n\t\t\t\t\t<p\n\t\t\t\t\t\tid={`${idAttrForHelpElement()}`}\n\t\t\t\t\t\tclassName={'description'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{fieldProps.help}\n\t\t\t\t\t</p>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t}\n\n\t/**\n\t * Render field group\n\t */\n\treturn fieldInner(props);\n};\n\n\nFieldGroup.propTypes = fieldGroupPropTypes;\n\nFieldGroup.defaultProps = {\n\tisBlockInput: true,\n\tisRequired: false,\n\thelp: ''\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/FieldGroup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "FieldGroup",
    "memberof": "src/components/fields/FieldGroup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/FieldGroup.js~FieldGroup",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/FieldGroup.js",
    "importStyle": "{FieldGroup}",
    "description": "Represents one configField -- wrapper, label and input.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/components/fields/FieldInner.js",
    "content": "import {fieldPropTypes} from './propTypes';\nimport React from 'react';\nimport {Input} from './input/Input';\nimport {SelectField} from './select/SelectField';\nimport {ariaDescribedbyAttr} from './util';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {RenderGroup} from '../RenderGroup';\n/**\n * Creates the field inside of a field group\n *\n * @param {Object} props\n * @returns {*}\n * @constructor\n */\nexport const FieldInner = (props) => {\n\n\t/**\n\t * Get the ID for the description element if it will be created\n\t *\n\t * @return {String|null}\n\t */\n\tfunction ariaIdAttr() {\n\t\treturn ariaDescribedbyAttr(props.id, props.help);\n\t}\n\n\t/**\n\t * Get the className prop for the\n\t *\n\t * @return {String}\n\t */\n\tfunction inputClassName() {\n\t\treturn classNames([\n\t\t\tprops.fieldClassName,\n\t\t\tRenderGroup.classNames.input\n\t\t]\n\t\t);\n\t}\n\n\tswitch( props.type ){\n\tcase 'select':\n\tcase 'dropdown':\n\t\treturn (\n\t\t\t<SelectField\n\t\t\t\tid={props.id}\n\t\t\t\tfieldClassName={inputClassName()}\n\t\t\t\tariaDescribedbyAttr={ariaIdAttr()}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonValueChange={props.onValueChange}\n\t\t\t\tinputType={props.inputType}\n\t\t\t\toptions={props.options}\n\t\t\t\tdisabled={props.disabled}\n\t\t\t/>\n\t\t);\n\tdefault:\n\tcase 'input':\n\t\treturn (\n\t\t\t<Input\n\t\t\t\tid={props.id}\n\t\t\t\tfieldClassName={inputClassName()}\n\t\t\t\tariaDescribedbyAttr={ariaIdAttr()}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonValueChange={props.onValueChange}\n\t\t\t\tinputType={props.inputType}\n\t\t\t\tdisabled={props.disabled}\n\t\t\t/>);\n\t}\n\n};\n\n/**\n * propTypes for FieldInner component\n *\n * @type {{options, ariaDescribedbyAttr}}\n */\nFieldInner.propTypes = {\n\t...fieldPropTypes,\n\ttype: PropTypes.string,\n};\n\n/**\n * Default props for FieldInner component\n * @type {{help: string}}\n */\nFieldInner.defaultProps = {\n\thelp: '',\n\ttype: 'input'\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/FieldInner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "FieldInner",
    "memberof": "src/components/fields/FieldInner.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/FieldInner.js~FieldInner",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/FieldInner.js",
    "importStyle": "{FieldInner}",
    "description": "Creates the field inside of a field group",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/components/fields/factories/fieldFactory.js",
    "content": "import {prepareFieldConfig} from './prepareFieldConfig';\nimport {FieldGroup} from '../FieldGroup';\n\n\n/**\n * Generates field controls\n *\n * @param {Array} fieldArgs Field config\n * @returns {*}\n */\nexport const fieldFactory = (fieldArgs) =>{\n\treturn FieldGroup(prepareFieldConfig(fieldArgs));\n};\n",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/factories/fieldFactory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "fieldFactory",
    "memberof": "src/components/fields/factories/fieldFactory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/factories/fieldFactory.js~fieldFactory",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/factories/fieldFactory.js",
    "importStyle": "{fieldFactory}",
    "description": "Generates field controls",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "fieldArgs",
        "description": "Field config"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/components/fields/factories/fieldSetFactory.js",
    "content": "import {fieldFactory} from './fieldFactory';\n\n/**\n * Given an array of field configs, generates and array of field controls\n *\n * Should be used for a group of settings, such as all settings for a processor.\n *\n * @param {Array} fields Field configs\n * @returns {Array}\n */\nexport const fieldSetFactory = (fields) =>{\n\tlet out = [];\n\tObject.values(fields).forEach( field => {\n\t\tout.push(fieldFactory(field));\n\t});\n\treturn out;\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/factories/fieldSetFactory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "fieldSetFactory",
    "memberof": "src/components/fields/factories/fieldSetFactory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/factories/fieldSetFactory.js~fieldSetFactory",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/factories/fieldSetFactory.js",
    "importStyle": "{fieldSetFactory}",
    "description": "Given an array of field configs, generates and array of field controls\n\nShould be used for a group of settings, such as all settings for a processor.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "fields",
        "description": "Field configs"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/components/fields/factories/index.js",
    "content": "/*eslint no-undef: \"error\"*/\n/*eslint-env node*/\nimport {fieldFactory} from './fieldFactory';\nimport {fieldSetFactory} from './fieldSetFactory';\n\nmodule.exports = {\n\tfieldFactory,\n\tfieldSetFactory\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/factories/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/components/fields/factories/prepareFieldConfig.js",
    "content": "import {fieldGroupPropTypes} from '../propTypes';\nimport {isValidHtml5type, toBoolean} from '../util';\nimport {messageObjectFactory} from '../messages/messageObjectFactory';\n\n/**\n * Validates field configurations\n *\n * NOTE: This is called internally by factory. You probably do not want to call this.\n *\n * @param {Object}fieldArgs\n * @returns {*}\n */\nexport const prepareFieldConfig = (fieldArgs) => {\n\t/**\n\t * Pick whitlisted keys from object\n\t *\n\t * @see http://www.jstips.co/en/javascript/picking-and-rejecting-object-properties/\n\t *\n\t * @param {Object} obj The object to pick from\n\t * @param {Array} keys The whitelist of keys\n\t * @return {*}\n\t */\n\tfunction pick(obj, keys) {\n\t\treturn keys.map(k => k in obj ? {[k]: obj[k]} : {})\n\t\t\t.reduce((res, o) => Object.assign(res, o), {});\n\t}\n\n\tswitch (fieldArgs.type) {\n\tcase 'select':\n\tcase 'dropdown':\n\t\tfieldArgs.type = 'select';\n\t\tbreak;\n\tcase 'fieldset':\n\t\tfieldArgs.type = 'fieldset';\n\t\tbreak;\n\tcase 'text':\n\tcase 'number':\n\tdefault:\n\t\tfieldArgs.inputType = isValidHtml5type(fieldArgs.type) ? fieldArgs.type : 'text';\n\t\tfieldArgs.type = 'input';\n\t\tbreak;\n\t}\n\n\tif (fieldArgs.hasOwnProperty('desc')) {\n\t\tfieldArgs.help = fieldArgs.desc;\n\t}\n\tif (fieldArgs.hasOwnProperty('description')) {\n\t\tfieldArgs.help = fieldArgs.description;\n\t}\n\n\tfieldArgs = pick(fieldArgs, Object.keys(fieldGroupPropTypes));\n\tfieldArgs.disabled = toBoolean(fieldArgs.disabled);\n\tfieldArgs.message = 'object' === typeof  fieldArgs.message\n\t\t? messageObjectFactory(fieldArgs.message)\n\t\t: messageObjectFactory({message:null, error: false });\n\treturn fieldArgs;\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/factories/prepareFieldConfig.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "prepareFieldConfig",
    "memberof": "src/components/fields/factories/prepareFieldConfig.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/factories/prepareFieldConfig.js~prepareFieldConfig",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/factories/prepareFieldConfig.js",
    "importStyle": "{prepareFieldConfig}",
    "description": "Validates field configurations\n\nNOTE: This is called internally by factory. You probably do not want to call this.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{Object}fieldArgs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/components/fields/field-group-change-handlers/fieldsetCheckboxHandler.js",
    "content": "import {addOrRemoveFromArray} from '../util';\n\n/**\n * Change handler for a checkbox that is a part of a group\n * @param {Object} option Option that is being changed. Shape: `{value:String|number,label:String}`,\n * @param {Array|string|number} values Current values\n * @param {Function} onValueChange Function to call with updated value\n */\nexport const fieldsetCheckboxHandler = (option, values, onValueChange)  => {\n\tif (!Array.isArray(values)) {\n\t\tif ('string' === typeof values || 'number' === typeof  values) {\n\t\t\tvalues = [values];\n\t\t} else {\n\t\t\tvalues = [];\n\n\t\t}\n\t}\n\tvalues = addOrRemoveFromArray(option.value, values);\n\tonValueChange(values);\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/field-group-change-handlers/fieldsetCheckboxHandler.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "fieldsetCheckboxHandler",
    "memberof": "src/components/fields/field-group-change-handlers/fieldsetCheckboxHandler.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/field-group-change-handlers/fieldsetCheckboxHandler.js~fieldsetCheckboxHandler",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/field-group-change-handlers/fieldsetCheckboxHandler.js",
    "importStyle": "{fieldsetCheckboxHandler}",
    "description": "Change handler for a checkbox that is a part of a group",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "option",
        "description": "Option that is being changed. Shape: `{value:String|number,label:String}`,"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": "Current values"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onValueChange",
        "description": "Function to call with updated value"
      }
    ],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/components/fields/index.js",
    "content": "/*eslint no-undef: \"error\"*/\n/*eslint-env node*/\nimport {FieldGroup} from './FieldGroup';\nimport {SelectFieldFancy} from './select/SelectFieldFancy';\nimport {Input} from './input/Input';\n\nmodule.exports = {\n\tFieldGroup,\n\tSelectField: SelectFieldFancy,\n\tInput\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/components/fields/input/Input.js",
    "content": "import React from 'react';\nimport {fieldPropTypes} from '../propTypes';\nimport classNames from 'classnames';\nimport {RenderGroup} from '../../RenderGroup';\n/**\n * Input component for any HTML5 input type\n *\n * @param {Object} props\n * @returns {*}\n * @constructor\n */\nexport const Input = (props) => {\n\t/**\n\t * Dispatches value of input when it changes\n\t * @param event\n\t * @return {*}\n\t */\n\tfunction changeHandler(event){\n\t\treturn props.onValueChange(event.target.value);\n\t}\n\n\t/**\n\t * Dispatches value when checkbox is checked\n\t * @return {*}\n\t */\n\tfunction checkboxChangeHandler() {\n\t\treturn props.onValueChange(! props.value);\n\t}\n\n\n\t/**\n\t * Get the className prop for inputs\n\t *\n\t * @return {String}\n\t */\n\tfunction inputClassName() {\n\t\treturn classNames(\n\t\t\tprops.fieldClassName,\n\t\t\tRenderGroup.classNames.input\n\t\t);\n\t}\n\n\tif( 'checkbox' === props.inputType ){\n\t\treturn (\n\t\t\t<input\n\t\t\t\ttype={'checkbox'}\n\t\t\t\tid={props.id}\n\t\t\t\tclassName={inputClassName()}\n\t\t\t\taria-describedby={props.ariaDescribedbyAttr}\n\t\t\t\trequired={props.isRequired}\n\t\t\t\tonChange={checkboxChangeHandler}\n\t\t\t\tdefaultChecked={props.value}\n\t\t\t\tdisabled={props.disabled}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<input\n\t\t\ttype={props.inputType}\n\t\t\tid={props.id}\n\t\t\tclassName={inputClassName()}\n\t\t\taria-describedby={props.ariaDescribedbyAttr}\n\t\t\trequired={props.isRequired}\n\t\t\tonChange={changeHandler}\n\t\t\tvalue={props.value}\n\t\t\tdisabled={props.disabled}\n\t\t/>\n\t);\n\n};\n\n/**\n * Prop definitions for Input components\n */\nInput.propTypes = fieldPropTypes;\n\n/**\n * Default props for Input Component\n *\n * @type {{ariaDescribedbyAttr: string, isRequired: boolean, inputType: string}}\n */\nInput.defaultProps = {\n\tariaDescribedbyAttr: '',\n\tisRequired: false,\n\tinputType: 'text'\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/input/Input.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/fields/input/Input.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/input/Input.js~Input",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/input/Input.js",
    "importStyle": "{Input}",
    "description": "Input component for any HTML5 input type",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/components/fields/messages/Message.js",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport {messagePropShape} from './messagePropTypes';\nimport classNames from 'classnames';\n\n/**\n * The class that message components always wrap messages in\n * @type {string}\n */\nexport const MESSAGE_CLASS = 'caldera-components-message';\n\n/**\n * Prop for showing a validation message\n *\n * Use or for errors and such\n *\n * @param {object}  props\n * @return {*}\n * @constructor\n */\nexport const Message = (props) => {\n\tconst {message,error} = props.message;\n\tif( !message || '' === message ){\n\t\treturn <React.Fragment></React.Fragment>;\n\t}\n\treturn(\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\tprops.className,\n\t\t\t\tMESSAGE_CLASS,\n\t\t\t\t{\n\t\t\t\t\t'has-error': error,\n\t\t\t\t\t'caldera-components-error': error,\n\t\t\t\t\t'caldera-components-not-error': ! error,\n\n\t\t\t\t}\n\t\t\t)}\n\t\t>\n\t\t\t{message}\n\t\t</div>\n\t);\n};\n\n/**\n * Prop types for Message components\n *\n * @type {{className: shim, message}}\n */\nMessage.propTypes = {\n\tclassName: PropTypes.string,\n\tmessage: messagePropShape,\n};\n\n",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/messages/Message.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "MESSAGE_CLASS",
    "memberof": "src/components/fields/messages/Message.js",
    "static": true,
    "longname": "src/components/fields/messages/Message.js~MESSAGE_CLASS",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/messages/Message.js",
    "importStyle": "{MESSAGE_CLASS}",
    "description": "The class that message components always wrap messages in",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "Message",
    "memberof": "src/components/fields/messages/Message.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/messages/Message.js~Message",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/messages/Message.js",
    "importStyle": "{Message}",
    "description": "Prop for showing a validation message\n\nUse or for errors and such",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/components/fields/messages/messageObjectFactory.js",
    "content": "import {toBoolean} from '../util';\n\n/**\n * Prepares messages object in fieldConfigs\n *\n * @param {Object} message\n * @param {Boolean} error\n * @return {{message: *, error: boolean}}\n */\nexport const messageObjectFactory = ({message,error}) => {\n\tif( 'string' !== typeof  message ){\n\t\tmessage = '';\n\t}\n\treturn{\n\t\tmessage: message,\n\t\terror: toBoolean(error)\n\t};\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/messages/messageObjectFactory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "messageObjectFactory",
    "memberof": "src/components/fields/messages/messageObjectFactory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/messages/messageObjectFactory.js~messageObjectFactory",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/messages/messageObjectFactory.js",
    "importStyle": "{messageObjectFactory}",
    "description": "Prepares messages object in fieldConfigs",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{message: *, error: boolean}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/components/fields/messages/messagePropTypes.js",
    "content": "import PropTypes from 'prop-types';\n\n/**\n * The shape of the message object passed to Message compoent\n *\n * @type {shim}\n */\nexport const messagePropShape = PropTypes.shape(\n\t{\n\t\terror: PropTypes.bool,\n\t\ttext: PropTypes.string\n\t}\n);",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/messages/messagePropTypes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "messagePropShape",
    "memberof": "src/components/fields/messages/messagePropTypes.js",
    "static": true,
    "longname": "src/components/fields/messages/messagePropTypes.js~messagePropShape",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/messages/messagePropTypes.js",
    "importStyle": "{messagePropShape}",
    "description": "The shape of the message object passed to Message compoent",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "shim"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/components/fields/propTypes.js",
    "content": "import PropTypes from 'prop-types';\nimport {messagePropShape} from './messages/messagePropTypes';\n\n/**\n * PropType for the field value used in multiple components\n *\n * @type {shim}\n */\nexport const valuePropType = PropTypes.oneOfType([\n\tPropTypes.string,\n\tPropTypes.number,\n\tPropTypes.array,\n\tPropTypes.bool\n]);\n\n/**\n * PropType for the field value change event used in multiple components\n *\n * @type {shim}\n */\nexport const onValueChangePropType = PropTypes.func.isRequired;\n\n/**\n * Proptypes for Input component\n * @type {shim}\n */\nexport  const inputTypeProp = PropTypes.string;\n\n/**\n * PropTypes for field groups\n *\n * @type {{id: (boolean|shim|*), isBlockInput: shim, isRequired: shim, help: shim, label: (boolean|shim|*), type: shim, value: shim, onValueChange: (boolean|shim|*), inputType: shim}}\n */\nexport const fieldGroupPropTypes = {\n\tid: PropTypes.string.isRequired,\n\tisBlockInput: PropTypes.bool,\n\tisRequired: PropTypes.bool,\n\thelp: PropTypes.string,\n\tlabel: PropTypes.string.isRequired,\n\ttype: PropTypes.oneOf(['input','select', 'fieldset']),\n\tvalue: valuePropType,\n\tonValueChange: onValueChangePropType,\n\toptions: PropTypes.array,\n\tinputType:inputTypeProp,\n\tdisabled: PropTypes.bool,\n\tmessage: messagePropShape\n};\n\n/**\n * PropTypes for the InnerField component\n *\n * @type {{id: (boolean|shim|*), fieldClassName: (boolean|shim|*), help: shim, value: shim, onValueChange: (boolean|shim|*), inputType: shim}}\n */\nexport const fieldInnerPropTypes = {\n\tid: PropTypes.string.isRequired,\n\tfieldClassName: PropTypes.string.isRequired,\n\thelp: PropTypes.string,\n\tvalue: valuePropType,\n\tonValueChange: onValueChangePropType,\n\tinputType: inputTypeProp,\n};\n\nexport const fieldPropTypes = {\n\t...fieldInnerPropTypes,\n\tariaDescribedbyAttr: PropTypes.string,\n};\n",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/propTypes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "valuePropType",
    "memberof": "src/components/fields/propTypes.js",
    "static": true,
    "longname": "src/components/fields/propTypes.js~valuePropType",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/propTypes.js",
    "importStyle": "{valuePropType}",
    "description": "PropType for the field value used in multiple components",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "shim"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "onValueChangePropType",
    "memberof": "src/components/fields/propTypes.js",
    "static": true,
    "longname": "src/components/fields/propTypes.js~onValueChangePropType",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/propTypes.js",
    "importStyle": "{onValueChangePropType}",
    "description": "PropType for the field value change event used in multiple components",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "shim"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "inputTypeProp",
    "memberof": "src/components/fields/propTypes.js",
    "static": true,
    "longname": "src/components/fields/propTypes.js~inputTypeProp",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/propTypes.js",
    "importStyle": "{inputTypeProp}",
    "description": "Proptypes for Input component",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "shim"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "fieldGroupPropTypes",
    "memberof": "src/components/fields/propTypes.js",
    "static": true,
    "longname": "src/components/fields/propTypes.js~fieldGroupPropTypes",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/propTypes.js",
    "importStyle": "{fieldGroupPropTypes}",
    "description": "PropTypes for field groups",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "{id: (boolean|shim|*), isBlockInput: shim, isRequired: shim, help: shim, label: (boolean|shim|*), type: shim, value: shim, onValueChange: (boolean|shim|*), inputType: shim}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "fieldInnerPropTypes",
    "memberof": "src/components/fields/propTypes.js",
    "static": true,
    "longname": "src/components/fields/propTypes.js~fieldInnerPropTypes",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/propTypes.js",
    "importStyle": "{fieldInnerPropTypes}",
    "description": "PropTypes for the InnerField component",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "{id: (boolean|shim|*), fieldClassName: (boolean|shim|*), help: shim, value: shim, onValueChange: (boolean|shim|*), inputType: shim}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "fieldPropTypes",
    "memberof": "src/components/fields/propTypes.js",
    "static": true,
    "longname": "src/components/fields/propTypes.js~fieldPropTypes",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/propTypes.js",
    "importStyle": "{fieldPropTypes}",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "{...fieldInnerPropTypes: Object, \"ariaDescribedbyAttr\": *}"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/components/fields/select/SelectField.js",
    "content": "import React from 'react';\nimport {fieldPropTypes} from '../propTypes';\nimport classNames from 'classnames';\nimport {RenderGroup} from '../../RenderGroup';\n\n/**\n * Creates a select field\n *\n * @param {Object} props\n * @returns {*}\n * @constructor\n */\nexport const SelectField = (props) => {\n\t/**\n\t * Dispatches new value(s) to parent\n\t *\n\t * @param selection\n\t * @returns {*}\n\t */\n\tfunction changeHandler(selection) {\n\t\treturn props.onValueChange(selection);\n\t}\n\n\t/**\n\t * Get the className prop for the select element\n\t *\n\t * @return {String}\n\t */\n\tfunction selectClassNames() {\n\t\treturn classNames(\n\t\t\tprops.fieldClassName,\n\t\t\tRenderGroup.classNames.input\n\t\t);\n\t}\n\n\treturn (\n\t\t<select\n\t\t\tid={props.id}\n\t\t\tclassName={selectClassNames()}\n\t\t\tvalue={props.value}\n\t\t\tdisabled={props.disabled}\n\t\t\tonChange={changeHandler}\n\t\t>\n\t\t\t{props.options\n\t\t\t\t.map((item,i) => {\n\t\t\t\t\tconst key = 'string' === typeof item.value ? item.value : i;\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tclassName={ 'caldera-config-option' }\n\t\t\t\t\t\t\tvalue={item.value}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</select>\n\n\n\n\t);\n};\n\n/**\n * Prop definition for select fields\n *\n * @type {{}}\n */\nSelectField.propTypes = {\n\t...fieldPropTypes,\n};\n\n/**\n * Default props for select fields\n *\n * @type {{options: Array}}\n */\nSelectField.defaultProps = {\n\toptions: []\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/select/SelectField.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "SelectField",
    "memberof": "src/components/fields/select/SelectField.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/select/SelectField.js~SelectField",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/select/SelectField.js",
    "importStyle": "{SelectField}",
    "description": "Creates a select field",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/components/fields/select/SelectFieldFancy.js",
    "content": "import React from 'react';\nimport Downshift from 'downshift';\nimport PropTypes from 'prop-types';\nimport {fieldPropTypes} from '../propTypes';\n\n/**\n * Creates a select field\n *\n * Wraps [downshift](https://github.com/paypal/downshift)\n *\n * @param {Object} props\n * @returns {*}\n * @constructor\n */\nexport const SelectFieldFancy = (props) => {\n\t/**\n\t * Dispatches new value(s) to parent\n\t *\n\t * @param selection\n\t * @returns {*}\n\t */\n\tfunction changeHandler(selection) {\n\t\treturn props.onValueChange(selection);\n\t}\n\n\treturn (\n\t\t<Downshift\n\t\t\tinputValue={props.value}\n\t\t\tdefaultInputValue={props.value}\n\t\t\tonChange={changeHandler}\n\t\t\titemToString={item => (item ? item.value : '')}\n\t\t\tdefaultIsOpen={props.isOpen}\n\t\t>\n\t\t\t{({\n\t\t\t\tgetInputProps,\n\t\t\t\tgetItemProps,\n\t\t\t\tisOpen,\n\t\t\t\tinputValue,\n\t\t\t\thighlightedIndex,\n\t\t\t\tselectedItem,\n\t\t\t}) => (\n\t\t\t\t<div>\n\t\t\t\t\t<input {...getInputProps({\n\t\t\t\t\t\tid: props.id\n\t\t\t\t\t})} />\n\t\t\t\t\t{isOpen ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{props.options\n\t\t\t\t\t\t\t\t.filter(item => !inputValue || item.value.includes(inputValue))\n\t\t\t\t\t\t\t\t.map((item, index) => (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tkey={item.value}\n\t\t\t\t\t\t\t\t\t\t{...getItemProps({\n\t\t\t\t\t\t\t\t\t\t\tkey: item.value,\n\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\t\t\t\t\thighlightedIndex === index ? 'lightgray' : 'white',\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: selectedItem === item ? 'bold' : 'normal',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tclassName: 'caldera-config-option'\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{item.value}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Downshift>\n\t);\n};\n\n\nSelectFieldFancy.propTypes = {\n\t...fieldPropTypes,\n\tisOpen: PropTypes.bool,\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/select/SelectFieldFancy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "SelectFieldFancy",
    "memberof": "src/components/fields/select/SelectFieldFancy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/select/SelectFieldFancy.js~SelectFieldFancy",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/select/SelectFieldFancy.js",
    "importStyle": "{SelectFieldFancy}",
    "description": "Creates a select field\n\nWraps [downshift](https://github.com/paypal/downshift)",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "src/components/fields/util.js",
    "content": "/**\n * Create the aria-describedby attribute or id attribute for the describing element\n *\n * @param {String} id Id attribute of input being described\n * @param {String} help Optional. Help text. If empty return is null.\n * @returns {String|null}\n */\nexport const  ariaDescribedbyAttr = (id, help = '') => {\n\tlet ariaDescribedby = null;\n\tif (help.length) {\n\t\tariaDescribedby = `${id}-description`;\n\t}\n\treturn ariaDescribedby;\n};\n\n\n/**\n * Get HTML5 input types that are valid\n * @returns {string[]}\n */\nexport function getHtmlInputTypes() {\n\treturn [\n\t\t'text',\n\t\t'email',\n\t\t'number',\n\t\t'date',\n\t\t'datetime',\n\t\t'password',\n\t\t'submit',\n\t\t'reset',\n\t\t'checkbox',\n\t\t'hidden'\n\t];\n}\n\n/**\n * Checks if a given input type is an acceptable HTML5 input type\n *\n * @param {String} type\n * @returns {boolean}\n */\nexport function isValidHtml5type(type) {\n\treturn getHtmlInputTypes().includes(type);\n}\n\n\n/**\n * Remove a value from an array if present, if not present, add it\n *\n * @param {String|number} value Value to add or remove\n * @param {Array} array Array to mutate\n * @return {*}\n */\nexport const addOrRemoveFromArray = (value,array) => {\n\tconst index = array.indexOf(value);\n\tif (index !== -1){\n\t\tarray.splice(index, 1);\n\t}else{\n\t\tarray.push( value );\n\t}\n\treturn array;\n};\n\n/**\n * Cast a boolean or boolean like to a true or false\n *\n * @param Mixed} value Value to cast\n * @return {boolean}\n */\nexport const toBoolean =(value) => {\n\tswitch(value){\n\tcase true:\n\tcase 'true':\n\tcase 1:\n\tcase '1':\n\tcase 'on':\n\tcase 'yes':\n\t\treturn true;\n\tdefault:\n\t\treturn false;\n\t}\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/fields/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "ariaDescribedbyAttr",
    "memberof": "src/components/fields/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/util.js~ariaDescribedbyAttr",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/util.js",
    "importStyle": "{ariaDescribedbyAttr}",
    "description": "Create the aria-describedby attribute or id attribute for the describing element",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Id attribute of input being described"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "help",
        "description": "Optional. Help text. If empty return is null."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "getHtmlInputTypes",
    "memberof": "src/components/fields/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/util.js~getHtmlInputTypes",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/util.js",
    "importStyle": "{getHtmlInputTypes}",
    "description": "Get HTML5 input types that are valid",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "isValidHtml5type",
    "memberof": "src/components/fields/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/util.js~isValidHtml5type",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/util.js",
    "importStyle": "{isValidHtml5type}",
    "description": "Checks if a given input type is an acceptable HTML5 input type",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "addOrRemoveFromArray",
    "memberof": "src/components/fields/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/util.js~addOrRemoveFromArray",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/util.js",
    "importStyle": "{addOrRemoveFromArray}",
    "description": "Remove a value from an array if present, if not present, add it",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Value to add or remove"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "Array to mutate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "toBoolean",
    "memberof": "src/components/fields/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/fields/util.js~toBoolean",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/components/fields/util.js",
    "importStyle": "{toBoolean}",
    "description": "Cast a boolean or boolean like to a true or false",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "Mixed}",
        "description": "value Value to cast"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/components/index.js",
    "content": "/*eslint no-undef: \"error\"*/\n/*eslint-env node*/\nimport * as fields from './fields/index';\nimport * as factories from './fields/factories/index';\nimport {RenderGroup} from './RenderGroup';\n\nmodule.exports = {\n\tRenderGroup,\n\tfields,\n\tfactories\n};",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/components/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/index.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/registerServiceWorker.js",
    "content": "// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "/Users/josh/caldera-js/components/src/registerServiceWorker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "isLocalhost",
    "memberof": "src/registerServiceWorker.js",
    "static": true,
    "longname": "src/registerServiceWorker.js~isLocalhost",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/registerServiceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "register",
    "memberof": "src/registerServiceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/registerServiceWorker.js~register",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/registerServiceWorker.js",
    "importStyle": "register",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "registerValidSW",
    "memberof": "src/registerServiceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/registerServiceWorker.js~registerValidSW",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/registerServiceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "swUrl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "checkValidServiceWorker",
    "memberof": "src/registerServiceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/registerServiceWorker.js~checkValidServiceWorker",
    "access": "public",
    "export": false,
    "importPath": "@caldera-labs/components/src/registerServiceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [
      {
        "name": "swUrl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "unregister",
    "memberof": "src/registerServiceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/registerServiceWorker.js~unregister",
    "access": "public",
    "export": true,
    "importPath": "@caldera-labs/components/src/registerServiceWorker.js",
    "importStyle": "{unregister}",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "kind": "index",
    "content": "# Caldera Components\nUI components for Caldera Forms admin, Caldera Forms 2.0 front-end\n\n[![Build Status](https://travis-ci.org/calderawp/caldera-components.svg?branch=master)](https://travis-ci.org/calderawp/caldera-components)\n[![Coverage Status](https://coveralls.io/repos/github/calderawp/caldera-components/badge.svg?branch=master)](https://coveralls.io/github/calderawp/caldera-components?branch=master)\n[![Coverage Status](https://calderalabs.org/caldera-components/badge.svg)](https://calderalabs.org/caldera-components/source.html)\n\n🌋 [Documentation](http://calderalabs.org/caldera-components/)\n\n## What Is This?\n* React components for Caldera Forms\n* Factories for generating UI dynamically.\n\n## Why Is This?\n[See goals](http://calderalabs.org/caldera-components/#goals)\n\n## Usage\n\n### Install\n`npm i -D @caldera-labs/components`\n\n### Using This Library\n* 🌋 [Components](http://calderalabs.org/caldera-components/manual/components.html)\n* 🌋 [Factories](http://calderalabs.org/caldera-components/manual/factories.html)\n* 🌋 🌋 Import From Webpack\n    - `import * as CalderaComponents from '@caldera-labs/components';`\n* The reference implementation of this library is [`@caldera-labs/processor-ui`](https://github.com/CalderaWP/processor-ui)\n\n#### Basic Example\nThe easiest way to use this library is with the [`RenderGroup` component](https://calderalabs.org/caldera-components/manual/components.html#rendergroup). This component takes an array of configField settings. These settings follow a schema, [defined here](https://calderalabs.org/caldera-components/manual/factories.html#configfield-schema).\n\n```jsx\nimport * as CalderaComponents from '@caldera-labs/components';\nimport React from 'react';\n\n<CalderaComponents.RenderGroup \n    className={'cf-something-config'}\n    configFields={[\n        {\n            'id': 'cf-something-select-id',\n            'type': 'dropdown',\n            'label': 'Content type',\n            'description': 'Choose content type, default is HTML',\n            options: [\n                {\n                    label: 'HTML',\n                    value: 'html'\n                },\n                {\n                    label: 'Plain Text',\n                    value: 'plain'\n                }\n            ],\n            value: 'html',\n            onValueChange: (newValue) =>{\n                console.log(newValue)\n            }\n        }\n    ]}\n/>\n\n```\n\n## How To Develop This\n\n### Development Requirements\n* [npm](https://www.npmjs.com/get-npm)\n* [Yarn](https://yarnpkg.com/lang/en/docs/install/#mac-stable)\n* [Git]()\n\n### Testing\n[See testing documentation](http://calderalabs.org/caldera-components/manual/testing.html)\n\n### Scripts\n\n#### Develop\n* `yarn start`\n    - Runs linter and compiles for production\n    - Starts test app server\n\n#### Tests\n* `yarn test`\n    - Run test watcher\n* `npm test:once` \n    - Run tests once\n\n#### Lint Code\n* `yarn lint`\n    - Run linter and fixer watch\n* `yarn lint:fix`\n    - Lint and fix code once\n* `yarn lint:once`\n    - Lint code once\n\n\n#### Generate Documentation\n* `npm run documentation`\n    - Generates documentation from inline docs\n    - Generates documentation from markdown files in /manual\n\n#### Release To npm\nMust be [logged in as project maintainer via npm cli](https://docs.npmjs.com/cli/adduser)\n\n* `yarn release`\n    - Release a patch update\n    - Increments third position of a version. 1.0.1 -> 1.0.2\n* `yarn release:minor`\n    - Release a minor update\n    - Increments second position of a version. 1.0.1 -> 1.1.0 \n* `yarn release:major`\n    - Release a major update\n    - Increments second position of a version. 1.0.1 -> 2.0.0 \n    \nThese commands run the tests and linter, and if they pass, re-compiles source, rebuilds docs, updates the version using [npm version](https://docs.npmjs.com/cli/version), adds a git tag, makes a git commit for the version change and updates the module on npm.\n",
    "longname": "/Users/josh/caldera-js/components/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@caldera-labs/components\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"classnames\": \"^2.2.6\",\n    \"downshift\": \"^1.31.16\"\n  },\n  \"license\": \"GPL-2.0\",\n  \"scripts\": {\n    \"start\": \"react-wp-scripts start\",\n    \"example:build\": \"react-wp-script build\",\n    \"test\": \"react-scripts test --env=jsdom\",\n    \"test:once\": \"CI=true react-scripts test --env=jsdom\",\n    \"test:coverage\": \"npm test -- --coverage\",\n    \"eject\": \"react-wp-script eject\",\n    \"lint\": \"eslint src/components/**\",\n    \"document\": \"./node_modules/.bin/esdoc\",\n    \"build\": \"npm run build:pre && npm run build:compile && npm run build:post\",\n    \"build:pre\": \"npm run test:once\",\n    \"build:compile\": \"./node_modules/.bin/babel -d dist src/components\",\n    \"build:post\": \"npm run document\",\n    \"prepublish\": \"npm run build\",\n    \"release\": \"npm run release:patch\",\n    \"release:minor\": \"npm version minor -m \\\"version %s\\\" && npm publish\",\n    \"release:major\": \"npm version major -m \\\"version %s\\\" && npm publish\",\n    \"release:patch\": \"npm version patch -m \\\"version %s\\\" && npm publish\"\n  },\n  \"main\": \"./dist/index.js\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-preset-env\": \"^1.7.0\",\n    \"babel-preset-react\": \"^6.24.1\",\n    \"babel-preset-stage-3\": \"^6.24.1\",\n    \"enzyme\": \"^3.3.0\",\n    \"enzyme-adapter-react-16\": \"^1.1.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint-plugin-jest\": \"^21.17.0\",\n    \"eslint-plugin-react\": \"^7.9.1\",\n    \"prop-types\": \"^15.6.1\",\n    \"react\": \"^16.4.1\",\n    \"react-dom\": \"^16.4.1\",\n    \"react-test-renderer\": \"^16.4.1\",\n    \"react-wp-scripts\": \"0.2.0\"\n  },\n  \"jest\": {\n    \"collectCoverageFrom\": [\n      \"src/components/**/*.js\",\n      \"!src/components/index.js\",\n      \"!src/components/fields/index.js\"\n    ]\n  }\n}\n",
    "longname": "/Users/josh/caldera-js/components/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# Caldera Components\n\n## Goals\n* Have a repeatable systems for creating fields and field configuration for the Caldera Forms admin interface.\n* Have a factory that can consume a configuration like [the PHP class `Caldera_Forms_Processor_UI`](https://calderaforms.com/doc/creating-caldera-forms-processors-using-caldera_forms_processor_processor-class/) but beacuse the factory runs client-side, they can update in real time.\n* Wrap this in [a processor UI library](https://github.com/CalderaWP/caldera-processors) that can dynamically generate processor configs, using an array managed by redux.\n\n## Important Notes\n* There is no state managment in this library. It is designed to be used with a module that handles state.\n    - For example, these components can show error/ validation/ etc messages. Other modules will provide the messages via state managment.\n    - Validation logic, is/is not in scope for this module.\n\n## Structure of class attributes\n\nThe goal is to always get these classes from the `RenderGroup`'s property `classNames`. That's currently partially true. This SHOULD be the single source of truth for classNames that are universally applied to these types of elements.\n\n```html\n<div class=\"caldera-config-field-setup\">\n    <div class=\"caldera-config-group \">\n        <label \n            for=\"example-1\">\n                First Name\n        </label>\n        <div class=\"caldera-config-field \">\n            <input \n                type=\"text\" \n                id=\"example-1\"\n                class=\"block-input field-config  required\"\n             />\n        </div>\n    </div>\n    <div class=\"caldera-config-group\">\n        <label \n            for=\"example-2\">\n                Last Name\n        </label>\n        <div class=\"caldera-config-field \">\n            <input \n                type=\"text\" \n                id=\"example-2\"\n                class=\"block-input field-config required\"\n             />\n        </div>\n    </div>\n    <div class=\"caldera-config-group\">\n    \t\t<fieldset>\n    \t\t\t<legend>\n    \t\t\t    Humanoid? Check All That Apply\n                </legend>\n    \t\t\t<div class=\"caldera-config-field\">\n    \t\t\t\t<label for=\"organic-human\">\n    \t\t\t\t    Organic Human\n    \t\t\t\t</label>\n                    <input \n                        id=\"organic-human\" \n                        type=\"checkbox\" \n                        class=\"field-config\"\n                    />\n                    <label for=\"andorid\">\n                        Humanoid Android\n                    </label>\n                    <input \n                        id=\"andorid\" \n                        type=\"checkbox\" \n                        class=\"field-config\"\n                    />\n                    <label for=\"alien\">\n                       Humanoid Alien\n                    </label>\n                    <input \n                        id=\"alien\" \n                        type=\"checkbox\" \n                        class=\"field-config\"\n                    />\n    \t\t\t</div>\n    \t\t</fieldset>\n    \t</div>\n</div>\n\n```\n\n\n\n",
    "longname": "/Users/josh/caldera-js/components/manual/index.md",
    "name": "./manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/josh/caldera-js/components/manual/components.md",
    "name": "./manual/components.md",
    "content": "# Included Component\nThese components are used by the factories and follow their schema, [defined here](https://calderalabs.org/caldera-components/manual/factories.html#configfield-schema).\nIn general, use the `RenderGroup` component, do not use the low-level components. Use the factories or `RenderGroup`.\n\n## `RenderGroup`\nThe `RenderGroup` component takes an array of field configs and generates UI for them. \n\n* [Reference](https://calderalabs.org/caldera-components/class/src/components/RenderGroup.js~RenderGroup.html)\n\n### Example Of `RenderGroup` Component Usage\n\n```jsx \nconst textFieldConfig = {\n\t'id': 'cf-something-tags',\n\t'label': 'Tags',\n\t'desc': 'Comma separated list of tags.',\n\t'type': 'text',\n\t'description': false,\n\tvalue: 'Roy,Mike',\n\tonValueChange: (newValue) =>{\n\t\tconsole.log(newValue)\n\t}\n};\n\nconst hiddenFieldConfig = {\n\t'id': 'cf-something-sequence-id',\n\t'type': 'hidden',\n\t'label': 'Sequence ID',\n\t'description': false,\n\tvalue: '42',\n    \tonValueChange: (newValue) =>{\n    \t\tconsole.log(newValue)\n    \t}\n};\n\nconst selectFieldConfig = {\n\t'id': 'cf-something-select-id',\n\t'type': 'dropdown',\n\t'label': 'Content type',\n\t'description': 'Choose content type, default is HTML',\n\toptions: [\n\t\t{\n\t\t\tlabel: 'HTML',\n\t\t\tvalue: 'html'\n\t\t},\n\t\t{\n\t\t\tlabel: 'Plain Text',\n\t\t\tvalue: 'plain'\n\t\t}\n\t],\n\tvalue: 'html',\n    onValueChange: (newValue) =>{\n        console.log(newValue)\n    }\n};\n\nconst configFields = [\n\ttextFieldConfig,\n\thiddenFieldConfig,\n\tselectFieldConfig\n];\n\n<RenderGroup\n    configFields={configFields}\n    className={'cf-something-config'}\n /> \n```\n\n\n## Field Groups\nIf you have to use a component, please use `FieldGroup` not its inner components.\n\n* [Reference](https://calderalabs.org/caldera-components/function/index.html#static-function-Input)\n\n### Text field that is required\n```jsx\n<FieldGroup\n    id={'control-22'}\n    label={'Required Text input'}\n    type={'input'}\n    isRequired={true}\n    value={values.one}\n    onValueChange={(newValue) => {\n        values.one=newValue;\n    }}\n/>\n\n```\n\n### Text field that is not required\n```jsx\n<FieldGroup\n    id={'control-23'}\n    label={'Non Required Text input'}\n    type={'input'}\n    isRequired={true}\n    value={values.two}\n    onValueChange={(newValue) => {\n        values.two=newValue;\n    }}\n/>\n```\n\n### Text field with help text\n* Adding help text automatically ads `aria-describedby`\n\n```jsx\n<FieldGroup\n    id={'control-23'}\n    label={'With Help Text'}\n    type={'input'}\n    isRequired={true}\n    help={'Adding help text sets aria-describedy'}\n    value={values.thre}\n    onValueChange={(newValue) => {\n        values.three=newValue;\n    }}\n/>\n```\n\n\n### Number Field\n\n```jsx\n<FieldGroup\n    id={'control-24'}\n    label={'Non Required Numeric input'}\n    type={'input'}\n    innertype={'number'}\n    isRequired={true}\n    value={values.two}\n    onValueChange={(newValue) => {\n        values.two=newValue;\n    }}\n/>\n\n```\n## Select Fields\n* [Reference](https://calderalabs.org/caldera-components/function/index.html#static-function-SelectField)\n\n```jsx \nimport {SelectFieldFancy} from '@caldera-labs/components/src/components/fields/select/SelectFieldFancyFancy.js'\n\n<SelectFieldFancy\n    id={'number-of-things'} //ID attribute for input\n    fieldClassName={'thing-select'} //Field className prop\n    onValueChange={(newValue) => {\n        console.log(newValue)\n    }} //Update callback\n    options={[\n        {\n            value: '1,\n            label: 'One'\n        },\n        {\n            value: '2',\n            label: 'Two'\n        }\n    ]}\n    value={'2'} //The current value\n/>\n    \n```\n\n## Fieldsets\nFor a `<fieldset>` element containing checkboxes, pass the value `fieldset` to the `type\n\n\n```js\n//Value is an array.\nlet checkBoxValue = ['1'];\n\n<FieldGroup\n    type={'fieldset'} //Create a ground of checkboxes wrapped in a field set\n    label={'Checkbox group'} //Used for the <legend>\n    value={checkBoxValue} //value(s)\n    id={'Checkbox1'} //id attribute for <fieldset>\n    onValueChange={(newValue) => {\n    \t//logic of removing/adding from array is handled internally\n        checkBoxValue = newValue;\n    }}\n    options={[\n        {\n            value: '1', //this value is in array so box will be checked by default\n            label: 'One'// Used for this checkbox's <label>\n        },\n        {\n            value: '2', //this value is NOT in array so box will NOT be checked by default\n            label: 'Two'// Used for this checkbox's <label>\n        }\n    ]}\n/>\n```\n\n## Message component\nThe `Message` component is used to display validation messages in a `FieldGroup` component. Messages have a shape defined in the `messagePropShape` object. This component, by design, returns nothing if `props.message.message` is not supplied, or is an empty string.\n### An error message\n```js\n<Message\n    message={{\n        message:'Something bad has happened.',\n        error: true,\n    }}\n/>\n```\n\n### A non-error message\n```js\n<Message\n    message={{\n        message:'Something has happened.',\n        error: false,\n    }}\n/>\n```\n\n### Render nothing\nMessage components only render when needed.\n\nThis will not render anything\n ```js\n <Message\n     message={{\n         error: false,\n     }}\n />\n ```\n \n This will also render nothing:\n  ```js\n  <Message\n      message={{\n          message: '',\n      }}\n  />\n  ```\n\n### Adding additional classes to the message's outer element\nThis example adds the class `cf-whatever-error` to the element with the message.\n \n```js\n<Message\n    message={{\n        message:'Hi Roy'\n    }}\n    className={'cf-whatever-error'}\n/>\n```",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/josh/caldera-js/components/manual/factories.md",
    "name": "./manual/factories.md",
    "content": "# Component Factories\nIn general, if not using `RenderGroup` component, do not use the components, use the factories. \n\n## `fieldSetFactory`\nYou can use the `fieldSetFactory` to generate an array of React components for each config field.\n\n```js\nimport React from 'react';\nimport * as CalderaComponents from '@caldera-labs/components';\n\n/**\n* Create array of React components\n*/\nconst fields = CalderaComponents.factories.fieldSetFactory([\n\t{\n    \t'id': 'post-tags',\n    \t'label': 'Tags',\n    \t'desc': 'Comma separated list of tags.',\n    \t'type': 'text',\n    },\n\t{\n    \t'id': 'seq-field',\n    \t'type': 'hidden',\n    \t'label': 'Sequence ID',\n    }\n]);\n\n//Output each component.\n//Fragment is used to avoid extra HTML elements being created around the configField. You could use `'div'` here if you wanted. \n{Array.from(fields).map((field,i) => {\n    return React.createElement(\n        React.Fragment, //could use `'div'` to add an extra wrapping `div` element.\n        {\n            key: i,//Key must be unique. Should only change to indicate that a complete re-render is needed. `field.ID` is probably a better option.\n        },\n        field // The component.\n    );\n})}\n```\nBTW ^^ This is basically what `RenderGroup` does, so have a really good reason to copypaste this example instead of using `RenderGroup`\n\n## configField Schema\n\n* ID (or id) `String`. Required.\n    - The field's identifier \n    - Is not the HTML id attribute.\n* label `String`. Required.\n    - The field's label text\n    - Association of label's html attribute `for` and field element's html `id` attribute is handled automatically.\n* type `String`. Required.\n    - The kind of input\n* inputType `String`. Optional.\n    - The type of input.\n    - Any valid option for an HTML5 input is accepted. For example, `checkbox` or `url` or `email` or `number`.\n    - Does not apply to select fields.\n* description `String|Boolean`. Optional.\n    - Extra help text for a form field inside of a `p` element.\n    - Association of `p` element's html `id` attribute and the `aria-describedby` attribute of the form field is handled automatically.\n    - Default value is `false`, which shows no description/ help text.\n* options `Array`. Optional.\n    - Select field options\n    - Shape for options is `[{label: String, value: String|number|Array}]`\n    - Does not apply to input fields. \n* disabled `Boolean` Optional.\n    - Should form field be disbaled?\n    - Default is false.\n\n\n###Field types\n### Select Fields\n\n#### Example Of Select Fields\n#### Basic Select Field\n```js\nconst selectFieldConfig = {\n\t'id': 'cf-something-select-id',\n\t'type': 'select',\n\t'label': 'Content type',\n\t'description': 'Choose content type, default is HTML',\n\toptions: [\n\t\t{\n\t\t\tlabel: 'HTML',\n\t\t\tvalue: 'html'\n\t\t},\n\t\t{\n\t\t\tlabel: 'Plain Text',\n\t\t\tvalue: 'plain'\n\t\t}\n\t],\n\tvalue: selectFieldValue,\n\tonValueChange: function(newValue){\n\t\tconsole.log(newValue)\n\t}\n};\n```\n\n### Input\nSupports any valid HTML5 input type.\n\n#### Examples Of Inputs\n\n#### Text Field\n\n```js\nconst textFieldConfig = {\n\t'id': 'post-tags',\n\t'label': 'Tags',\n\t'desc': 'Comma separated list of tags.',\n\t'type': 'text',\n\t'description': false\n};\n```\n#### Hidden Field\n\n```js\nconst hiddenFieldConfig = {\n\t'id': 'seq-field', //Unique ID\n\t'type': 'hidden', //type is set to hidden\n\t'label': 'Sequence ID', //label is still required. Make it descriptive.\n};\n```",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/josh/caldera-js/components/manual/testing.md",
    "name": "./manual/testing.md",
    "content": "# Testing\n\n## Unit Testing\nTests use [Jest](https://facebook.github.io/jest/docs/en/expect.html). Unit tests are primarily snapshots of components or tests of function results\n\n\n### Example: Snapshot Testing A Component\n```\nit( 'Passes its props', () => {\n    const component = renderer.create(\n        <Input\n            id={'bags'}\n            fieldClassName={'foo'}\n            onValueChange={() => {}}\n        />\n    );\n    expect( component.toJSON() ).toMatchSnapshot();\n});\n```\n\n### Example: Testing a function result\n```\nit('Returns properly when passed help text', () => {\n    expect(ariaDescribedbyAttr('foo', 'help me Obi-won Kenobi')).toEqual('foo-description');\n});\n\n```\n## DOM Testing\nDOM testing uses Jest and [Enzyme](http://airbnb.io/enzyme).\n\n### Example\n\n```js\n\nimport { shallow, mount, render } from 'enzyme';\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nEnzyme.configure({ adapter: new Adapter() });\n\nit( 'Has the right wrapper class', () => {\n    const wrapper = shallow(<FieldGroup\n        id={'whatever'}\n        label={'does not matter'}\n        type={'input'}\n    />);\n    expect(wrapper.find('div.caldera-config-group').length).toBe(1);\n});\n```\n\n### Important Notes\n\n\n### What To Test\nEVERYTHING! LOL.\n\n[Don't test React, test our components.](https://github.com/airbnb/enzyme/issues/952#issuecomment-303238446) \n\n### Testing change handlers\n#### Simulate A Change Handler\nCall the select element found in wrapper's onChange() callback (not a simulation of browser click) with a mock object that is enough like an event, we can test with it.\n\n```js\nwrapper.find( 'select' ).simulate('change', { target: { value: 'imaginary' } });\n```\n\n### shallow vs full rendering\nShallow rendering is preferred. Full rendering with `mount` should be used for containers or testing decedents of a component.\n\n* http://airbnb.io/enzyme/docs/api/shallow.html\n* http://airbnb.io/enzyme/docs/api/mount.html\n\n### Be careful about copying from Enzyme's docs\nEnzyme's docs use a different assertion library than we do. Therefore examples like this:\n\n```\nit('allows us to set props', () => {\n    const wrapper = mount(<Foo bar=\"baz\" />);\n    expect(wrapper.props().bar).to.equal('baz');\n});\n```\n\n[see original](http://airbnb.io/enzyme/docs/api/mount.html)\n\nWould be rewritten as this:\n\n```js\nit('allows us to set props', () => {\n    const wrapper = mount(<Foo bar=\"baz\" />);\n    expect(wrapper.props().bar).toEqual('baz');\n});\n```\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/josh/caldera-js/components/README.md",
    "name": "./README.md",
    "content": "# Caldera Components\nUI components for Caldera Forms admin, Caldera Forms 2.0 front-end\n\n[![Build Status](https://travis-ci.org/calderawp/caldera-components.svg?branch=master)](https://travis-ci.org/calderawp/caldera-components)\n[![Coverage Status](https://coveralls.io/repos/github/calderawp/caldera-components/badge.svg?branch=master)](https://coveralls.io/github/calderawp/caldera-components?branch=master)\n[![Coverage Status](https://calderalabs.org/caldera-components/badge.svg)](https://calderalabs.org/caldera-components/source.html)\n\n🌋 [Documentation](http://calderalabs.org/caldera-components/)\n\n## What Is This?\n* React components for Caldera Forms\n* Factories for generating UI dynamically.\n\n## Why Is This?\n[See goals](http://calderalabs.org/caldera-components/#goals)\n\n## Usage\n\n### Install\n`npm i -D @caldera-labs/components`\n\n### Using This Library\n* 🌋 [Components](http://calderalabs.org/caldera-components/manual/components.html)\n* 🌋 [Factories](http://calderalabs.org/caldera-components/manual/factories.html)\n* 🌋 🌋 Import From Webpack\n    - `import * as CalderaComponents from '@caldera-labs/components';`\n* The reference implementation of this library is [`@caldera-labs/processor-ui`](https://github.com/CalderaWP/processor-ui)\n\n#### Basic Example\nThe easiest way to use this library is with the [`RenderGroup` component](https://calderalabs.org/caldera-components/manual/components.html#rendergroup). This component takes an array of configField settings. These settings follow a schema, [defined here](https://calderalabs.org/caldera-components/manual/factories.html#configfield-schema).\n\n```jsx\nimport * as CalderaComponents from '@caldera-labs/components';\nimport React from 'react';\n\n<CalderaComponents.RenderGroup \n    className={'cf-something-config'}\n    configFields={[\n        {\n            'id': 'cf-something-select-id',\n            'type': 'dropdown',\n            'label': 'Content type',\n            'description': 'Choose content type, default is HTML',\n            options: [\n                {\n                    label: 'HTML',\n                    value: 'html'\n                },\n                {\n                    label: 'Plain Text',\n                    value: 'plain'\n                }\n            ],\n            value: 'html',\n            onValueChange: (newValue) =>{\n                console.log(newValue)\n            }\n        }\n    ]}\n/>\n\n```\n\n## How To Develop This\n\n### Development Requirements\n* [npm](https://www.npmjs.com/get-npm)\n* [Yarn](https://yarnpkg.com/lang/en/docs/install/#mac-stable)\n* [Git]()\n\n### Testing\n[See testing documentation](http://calderalabs.org/caldera-components/manual/testing.html)\n\n### Scripts\n\n#### Develop\n* `yarn start`\n    - Runs linter and compiles for production\n    - Starts test app server\n\n#### Tests\n* `yarn test`\n    - Run test watcher\n* `npm test:once` \n    - Run tests once\n\n#### Lint Code\n* `yarn lint`\n    - Run linter and fixer watch\n* `yarn lint:fix`\n    - Lint and fix code once\n* `yarn lint:once`\n    - Lint code once\n\n\n#### Generate Documentation\n* `npm run documentation`\n    - Generates documentation from inline docs\n    - Generates documentation from markdown files in /manual\n\n#### Release To npm\nMust be [logged in as project maintainer via npm cli](https://docs.npmjs.com/cli/adduser)\n\n* `yarn release`\n    - Release a patch update\n    - Increments third position of a version. 1.0.1 -> 1.0.2\n* `yarn release:minor`\n    - Release a minor update\n    - Increments second position of a version. 1.0.1 -> 1.1.0 \n* `yarn release:major`\n    - Release a major update\n    - Increments second position of a version. 1.0.1 -> 2.0.0 \n    \nThese commands run the tests and linter, and if they pass, re-compiles source, rebuilds docs, updates the version using [npm version](https://docs.npmjs.com/cli/version), adds a git tag, makes a git commit for the version change and updates the module on npm.\n",
    "static": true,
    "access": "public"
  }
]